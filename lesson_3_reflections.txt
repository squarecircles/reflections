When would you want to use a remote repository rather than keeping all your work local?
When you want to share with other developers easily.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
It Git automatically pulled changes, it may overwrite some of your existing work.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are clones made by Github and exist in Github's repositories. Clones create local copies of repositories. Branches are local snapshots of your commits.
Forks can be used to copy an existing Github's repository to your own Github repositories and also adds links back to original source. Clones can be used to copy remote repositories to your local repositories. Branches can be used to save the state of local repositories.

What is the benefit of having a copy of the last known state of the remote stored locally?
You can work offline using the local copy.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would use another source version control system or in the worse case, just zip up the source files and share that. The diffing of changes may be more difficult not using Git/GitHub.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
You can use separate branches for experimental features. One disadvantage of this is that you will might have to resolve more merge conflicts. 
